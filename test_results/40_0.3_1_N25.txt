initial_prob: 0.3
pusan_prob: 0.2
population_size: 20
elitism_cutoff: 2
mutation_num: 1
loop_limit: 100
evolution_depth: 40
N: 25
D: 50
tolerance: 0
intervalDuration:0.5
demand:[[114 106 132 132 117  83  57  52  13   8  18  13  26   3  13  10   0   0
    0   0   0   3   0   0   0   0   0   0   0   0   0   0   0   0]
 [  0   0   0   0   0   0  14   2   0   7  12   7   9   5   7   7  12   9
   32  39  53  35  30  18  60  44  60  53  90  58  78  71  35  55]]
maxWorkingHour: 4
alpha, demandViolationPenalty, rushHourViolationPenalty, maxWorkingHourViolationPenalty: 1,10,10,10
d135r3
----------------------------- generation 1 Start! -----------------------------
Min Cost Penalty: 8406.616206768927 -> 6735.223849351322
d135r3
d159r2
d159r2
d149r3
d127r3
d124r3
d124r3
d119r4
d119r4
d119r4
d119r4
d112r3
d108r3
d108r3
d108r3
d108r3
d110r3
d110r3
d107r3
d98r3
----------------------------- generation 21 Start! -----------------------------
Min Cost Penalty: 8050.641396765955 -> 6961.9071146008955
d98r3
d98r3
d103r3
d103r3
d93r3
d93r3
d93r3
d93r4
d93r4
d84r4
d92r3
d92r3
d92r3
d80r4
d80r4
d80r4
d80r4
d81r4
d81r4
**************************************************************
Progress_with_penalty of improvement:8406.616206768927to7707.595746033144
Progress of improvement: 6587.585130678013 to 6798.817713716073
Improvement Rate of progress: 0.032065252873068974
**************************************************************
best solution (path):
['00010000001000000000000000001000000000000010000000000000000000100000'
 '00000000000000010010100000000010000000001000100000001010001000000000'
 '00000000011000000000100000000010000000100000100000000000000000000000'
 '00000000000100000000001000000000000000000000000000000000001000100010'
 '10101000000000000000101000000000000000000000100000100000010000000000'
 '00001001010000000000001000000010001000000010101000000010000000100010'
 '00000010100000001010000000000000000010001000000010000000000000100000'
 '00000001100000100000101010000010100000001000100000000010000010000000'
 '10000010000000101010000010000000000000000000000000000000101010101010'
 '10000000000000000000101000000000001000001000000000001000101000100100'
 '00000100001000000000000010101000000000101010000010101000100000000000'
 '00000010000000100000100000000000001000100010000000000000001000001000'
 '00000000000000100000000000100000100000000000000000001000100000000000'
 '00001000000000001010101000000001000000000001000000001010100010010000'
 '00000000000000101010000000000000001000000010000000001000001010000000'
 '00100000100000000000100000001000000000100000001000000000001000000001'
 '00101000100010101000100000100000101000100000100000000010000000000010'
 '10000010101010100000000000100000000000000010100010101000000010000001'
 '00001000100010101000001010000000000010001000101000000000000010001000'
 '01000000000000000010000000000010000000101000010100000000100010101000'
 '00000000000000000000000010101000000000100000100010001000100000000000'
 '00000000101000001010000000000000000010001000001010100010001010000000'
 '00000010101000001010000000000000100010100000001001000000000000000000'
 '01000000000010001000000000100010001010001000000010000000000000000000'
 '00001010001000101000000000000000101000000001000000000000000000000000']
d81r4
d81r4
All constraints met? False
best solution (link): 
[[13 11  7  5  5  8 11  8  7  8  7  7  7  8 10  7  7  9 11  8  6  7  9 12
  10 10  8 10 10  8  6  7  8  8]
 [ 4  2  5  3  3  2  2  5  5  4  5  4  3  1  3  4  2  1  4  4  6  2  2  4
   3  3  3  3  3  6  4  3  3  1]
 [ 0  1  1  3  5  5  2  4  5  4  4  3  2  5  1  2  3  6  1  4  3  4  7  1
   3  1  5  3  4  2  4  4  1  3]
 [ 0  5  7  9  8  8  9  7  8  9  9 11 13 11 11 11 12  8  8  8  9 10  5  6
   7  9  7  7  5  6  8  7  8  6]
 [ 0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  1  1  0
   1  0  0  0  1  0  0  1  1  2]
 [ 2  1  1  1  2  1  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  1
   0  0  0  0  0  0  0  0  0  0]
 [ 6  5  4  3  2  1  1  0  0  0  0  0  0  0  0  0  1  1  1  1  1  0  1  1
   1  2  2  2  2  3  3  3  4  5]]
